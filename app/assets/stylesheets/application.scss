/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */
@import "bootstrap/scss/bootstrap";
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300;1,400;1,600;1,700;1,800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Nerko+One&display=swap');

 *,
 *::before,
 *::after{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

@mixin flex-col{
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@mixin flex-col-start{
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

@mixin flex-col-center{
  @include flex-col;
  align-items: center;
}

@mixin flex-row{
  display: flex;
  flex-direction: row;
  align-items: center;
}

@mixin flex-row-between{
  @include flex-row;
  justify-content: space-between
}

@mixin flex-row-even{
  @include flex-row;
  justify-content: space-evenly;
}

@mixin card-border-shadow{
  // box-shadow: rgba(50, 50, 105, 0.15) 0px 2px 5px 0px, rgba(0, 0, 0, 0.05) 0px 1px 1px 0px;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px 0px;
  background-color: white;
}

@mixin action-btn($bg) {
  color: white;
  text-decoration: none;
  padding:5px 10px;
  border-radius:3px;
  font-family: inherit;
  font-size: 1.1rem;
  background: $bg;
  &:hover {
    background:darken($bg,8%);
    transition: all 0.3s ease;
    color: white;
  }
  &:active {
    background:darken($bg,25%);
  } 
}

@mixin action-btn-black($bg) {
  color: white;
  text-decoration: none;
  padding:5px 10px;
  border-radius:3px;
  font-family: inherit;
  font-size: 1.1rem;
  background: $bg;
  &:hover {
    background:#f8da31;
    transition: all 0.3s ease;
    color: #131313;
  }
  &:active {
    background:#f8da31;
  } 
}

@mixin action-btn-border($bg) {
  color: black;
  text-decoration: none;
  padding:5px 10px;
  border-radius:3px;
  font-family: inherit;
  font-size: 1.1rem;
  border: 1px solid $bg;
  &:hover {
    background:darken($bg,8%);
    border: 1px solid darken($bg,8%);
    transition: all 0.3s ease;
    color: white;
  }
  &:active {
    background:darken($bg,25%);
    border: 1px solid darken($bg,8%);
  } 
}


@mixin border-light{
  border-bottom: 1px solid rgba(221, 221, 221, 0.671);
}

html {
  font-size: 62.5%;
  font-family: 'Open Sans', sans-serif;
  // overflow-y: scroll;
}

body{
  background-color: #91919125;
  width: 100%;
  @include flex-col-center();

  >nav{
    // background-color: red;
    @include flex-row-between();
    @include border-light();
    width: 74%;
    padding: 2rem 2rem;
    
  }

  >main{
    @include flex-col-center();
    width: 80%;
  }
}

a, a:hover{
  color: black;
  text-decoration: none;
  cursor: pointer;
}

button{
  color: white;
  text-decoration: none;
  padding:5px 10px;
  border-radius:3px;
  font-family: inherit;
  font-size: 0.8rem;
}

.container-planner{
  @include flex-col;
  // background-color: blanchedalmond;
  width: 100%;
  padding: 1vw 3vw 3vw 3vw;

  >.container-label {
    margin-bottom: 2rem;
    >.container-sub-label{
      >h1{
        font-size: 3rem;
        font-weight: 700;
        letter-spacing: 2px;
      }
      >h3{
        font-size: 2rem;
        font-weight: 300;
      }
    }
  }

  >.container-main-body {
    @include flex-row-between();
    align-items: flex-start;
    @media only screen and (max-width: 1000px) {
      @include flex-col(); 
    }
    >.container-header-section{
      @include flex-col;
      align-content: flex-start;
      // background-color: #e74c3c;
    }
    >.container-body-section{
      @include flex-col-start;
      // background-color: aqua;
    }
    >.container-header-section,
    >.container-body-section{

      width: 45%;
      @media only screen and (max-width: 1000px) {
        width: 100%;
      }
      >.container-header-stats{
        @include flex-col;
        margin-bottom: 2rem;
  
        >.container-header-label{
          @include flex-row-between();
          margin-bottom: 2rem;
  
          >.add-category-container{
            @include flex-row();
            flex-direction: row-reverse;
          }
        }
      
        >.container-header-label >h2{
          color: #929292;
          font-size: 2rem;
        }
      }
      >.container-header-stats >.sub-container-header-stats::-webkit-scrollbar,
      >.container-header-stats >.sub-container-header-stats-category::-webkit-scrollbar {
        display: none;
      }
  
      >.container-header-stats >.sub-container-header-stats{
        @include card-border-shadow;
        padding: 1rem;
        >*:not(:last-child){
          @include border-light();
        }
      }
      
  
      >.container-header-stats >.sub-container-header-stats,
      >.container-header-stats >.sub-container-header-stats-category{
        width: 100%;
        min-height: 10rem;
        // overflow-y: scroll;
        
        >h1{
          font-size: 3rem;
          font-weight: 500;
        }
        >h4{
          font-size: 1rem;
          font-weight: 300;
        }
      }
      >.container-header-stats >.sub-container-header-stats-category >.category-card{
        // background-color: red;
        @include card-border-shadow;
        border-radius: 1rem;
        margin-bottom: 1rem;
        >*{
          padding: 1rem 2rem;
        }
      }
      >.container-header-stats >.sub-container-header-stats >.category-card,
      >.container-header-stats >.sub-container-header-stats-category >.category-card{
        width: 100%;
        padding: 1rem 1.5rem;
        @include flex-row-between();
  
        >.category-data{
          >h1{
            font-size: 1.7rem;
            font-weight: 500;
          }
          >h2{
            font-size: 1.7rem;
            font-weight: 300;
          }
          >h3{
            font-size: 1.4rem;
            font-weight: 500;
          }
        }
        >.category-data-actual{
          >h1{
            font-size: 4rem;
            font-weight: 500;
          }
        }
        
        >.category-action{
          @include flex-row;
          flex-direction: row-reverse;
          >.edit{
            margin-right: 1rem;
            @include action-btn-black(#181818);
          }  
          >.delete{
            @include action-btn(#ee4334);
          }
          >.show{
            @include action-btn-border(#9c5f02);
          }
        }
      }

      >.sub-container-task_cards >.task-card-container{
        width: 100%;
        padding: 2rem 3rem;

        >h3{
          font-weight: 300;
        }
      }
      >.sub-container-task_cards >.task-card-container >.card-details{
        @include flex-row-between();
        // background-color: violet;
    
        >*:not(:last-child){
          width: 50%;
        }
    
        >:last-child{
          flex-grow: 0.2;
        }
    
        >.card-details-important{
          // background-color: blue;
          @include flex-row;
          flex-grow: 2;
          // width: 17vw;
    
          >.status{
            width: 15%;
            font-size: 1rem;
            font-weight: 700;
            margin-right: 1rem;
          }
          >.task-data{
            padding-left: 3rem;
            >h1{
              font-size: 1.2rem;
              font-weight: 700;
            }
    
            >h4{
              font-size: .8rem;
              font-weight: 100;
            }
          }
        }
    
        >.category{
          text-transform: uppercase;
          font-size: 1.2rem;
          font-weight: 700;
        }
    
        >.action-icon{
          @include flex-row;
          flex-direction: row-reverse;
          >.edit{
            margin-right: 1rem;
          }
          >.edit{
            @include action-btn-black(#181818);
          }
          >.delete{
            @include action-btn(#ee4334);
          }
          >.show{
            @include action-btn-border(#9c5f02);
          }
        }
      }
    
      >.container-label >h2{
        color: #929292;
        font-size: 2rem;
      }
    
      >.container-stats{
        // background-color: khaki;
        padding: .5rem;
        @include flex-row-even;
        flex-wrap: wrap;
        margin-bottom: 3rem;
      }
    
      >.container-stats >.sub-container-stats{
        @include flex-col;
        @include card-border-shadow;
        width: calc(70vw/2);
        height: calc( (70vw/5) + 4rem );
        border-radius: 1rem;
        padding: 1rem;
    
        >h1{
          font-size: 3rem;
          font-weight: 500;
        }
        >h4{
          font-size: 1rem;
          font-weight: 300;
        }
      }
    
      >.sub-container-task_cards{
        @include card-border-shadow();
        border-radius: 1rem;
        margin-bottom: 3rem;
        >*:not(:last-child){
          position: relative;
    
        }
        >*:not(:last-child)::after{
          content: '';
          position: absolute;
          width: 96%;
          bottom: 0;
          left: 2%;
          @include border-light();
        }
      }
    }
  
    >.container-label,
    >.container-body-section >.container-label{
      @include flex-row;
      justify-content: space-between;
      margin-bottom: 2rem;
      >h1{
        font-size: 3.5rem;
        font-weight: 500;
      }
      >.container-sub-label{
        >h1{
          font-size: 3.5rem;
          font-weight: 500;
        }
        >h3{
          font-size: 2rem;
          font-weight: 300;
        }
      }
    }
  
    >.container-label >h1{
      font-size: 2.5rem;
      font-weight: 700;
    }
  
    >.container-label >h2{
      font-size: 2rem;
    }
  
    >.container-stats{
      // background-color: khaki;
      padding: .5rem;
      @include flex-row-even;
      flex-wrap: wrap;
      margin-bottom: 3rem;
    }
  
    >.container-stats >.sub-container-stats{
      @include flex-col;
      @include card-border-shadow;
      width: calc(70vw/2);
      height: calc( (70vw/5) + 4rem );
      border-radius: 1rem;
      padding: 1rem;
  
      >h1{
        font-size: 3rem;
        font-weight: 500;
      }
      >h4{
        font-size: 1rem;
        font-weight: 300;
      }
    }
  
    >.sub-container-task_cards{
      @include card-border-shadow();
      border-radius: 1rem;
      margin-bottom: 3rem;
      >*:not(:last-child){
        position: relative;
  
      }
      >*:not(:last-child)::after{
        content: '';
        position: absolute;
        width: 96%;
        bottom: 0;
        left: 2%;
        @include border-light();
      }
    }
  
    
  }//container main body
  
}


.edit{
  @include action-btn-black(#181818);
}
.delete{
  @include action-btn(#ee4334);
}

.submit{
  border: none;
  @include action-btn-black(rgb(26, 26, 26));
}

.signin{
  border: none;
  @include action-btn-black(rgb(26, 26, 26));
  padding: 1rem;
  font-size: 1.3rem;
  font-weight: 500;
}

.login{
  padding: 1rem;
  font-size: 1.3rem;
  font-weight: 500;
}

.new{
  color: #bda107;
}

.ongoing{
  color: #f88131;
}

.completed{
  color: #06a844;
}

form{
  @include flex-col();
  //input type text, date, 
  font-family: inherit;
  padding: 1rem;
  >*{
    margin-bottom: 1rem;
  }
  >label{
    font-family: inherit;
    font-size: 1.2rem;
  }

  >input,
  textarea,
  select{
    outline: none;
    font-family: inherit;
    font-size: 1.3rem;
    padding: 0.7rem 1rem;
  }

  >input[type="submit"]{
    font-family: inherit;
    font-size: 1.3rem;
    margin-top: 1rem;
    padding: 1rem;
  }
}

.text-logo{
  font-family: 'Nerko One', cursive;
  font-size: 4rem;
  letter-spacing: 5px;
  color: rgb(0, 0, 0);
}
#modal-content{
  max-width: 40rem;
}
#addCategoryModalTitle,
#editCategoryModalTitle,
#editTaskModalTitle,
#addTaskModalTitle,
#showTaskModalTitle{
  font-size: 2rem;
  font-weight: 700;
}

//modals

.modal-body {
  >h3{
    font-size: 1.7rem;
  }
  >p{
    font-size: 1.5rem;
    margin-bottom: 2rem;
  }
  
  >h5{
    font-size: 1.2rem;
    color: #ee4334;
  }
}

.modal-header >h5{
  font-size: 2rem;
  font-weight: 700;
}

//flash messages
.flash-message-container{
  @include flex-col-center();
  width: 100%;
  height: 2rem;
}
.alert{
  align-content: center;
  padding: 1rem;
  width: 92%;
}



//animations

/* animations */
@keyframes moveInBottom {
  /* start of animation */
  0% {
      opacity: 0;
      transform: translateY(5rem); /* animate in X direction */
  }

  /* end of animation */
  100% {
      opacity: 1;
      transform: translate(0); /* translate 0 means to be in the original position*/
  }
}

@keyframes moveInTop {
  /* start of animation */
  0% {
      opacity: 0;
      transform: translateY(-5rem); /* animate in X direction */
  }

  /* end of animation */
  100% {
      opacity: 1;
      transform: translate(0); /* translate 0 means to be in the original position*/
  }
}

@keyframes moveInLeft {
  /* start of animation */
  0% {
      opacity: 0;
      transform: translateX(-2rem); /* animate in X direction */
  }

  100% {
      opacity: 1;
      transform: translate(0); /* translate 0 means to be in the original position*/
  }
}


@keyframes moveInRight {
  /* start of animation */
  0% {
      opacity: 0;
      transform: translateX(10rem); /* animate in X direction */
  }

  80% {
      opacity: 1;
      transform: translateX(-1rem); /* animate in X direction */
  }

  /* end of animation */
  100% {
      opacity: 1;
      transform: translate(0); /* translate 0 means to be in the original position*/
  }
}

@keyframes moveIn {
  /* start of animation */
  0% {
      opacity: 0;
  }

  80% {
      opacity: 1;
  }
}

@keyframes moveout {
  /* start of animation */
  0% {
      opacity: 1;
  }

  80% {
      opacity: 0;
  }
}

@keyframes rotate180 {
  /* start of animation */
  0% {
      transform: rotate(-10deg); /* animate in X direction */
  }

  /* end of animation */
  100% {
    transform: rotate(-370deg); /* translate 0 means to be in the original position*/
  }
}